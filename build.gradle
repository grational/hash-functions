/*
 * This build file was auto generated by 'gigawatt'
 * @author gsus
 * @date 10-03-2017 12.22
 */

// [plugins] this block must be the first
plugins {
	// support for groovy
	id 'groovy'
	// required by jitpack
	id 'maven-publish'
	// groovy code linter
	id 'codenarc'
	// awesome git tag / gradle version integration
	id 'pl.allegro.tech.build.axion-release' version '1.13.6'
}

// [general] configuration
project.ext {
	groovyVersion   = '2.5.15'
	spockVersion    = '2.0-groovy-2.5'
	codenarcVersion = '2.2.0'
	slf4jVersion    = '1.7.32'
}

scmVersion {
	tag {
		prefix = 'release-'
	}
}

project.with {
	//project.name is set in the settings.gradle with rootProject.name
	group       'it.grational'
	version     scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)
	description "The project offers some convenient classes to handle String hashes"
}
// [crosscompile] source and target java version
allprojects {
	sourceCompatibility = '1.8'
	targetCompatibility = sourceCompatibility
}

repositories {
	jcenter()
}

dependencies {
	// Groovy language support
	implementation (
		"org.codehaus.groovy:groovy:$groovyVersion",
		"org.slf4j:slf4j-api:$slf4jVersion"
	)

	// We use the awesome Spock testing and specification framework
	testImplementation (
		"org.spockframework:spock-core:$spockVersion"
	)
}

// [tasks] configuration
tasks.withType(Test) {
	useJUnitPlatform()
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = 'com.github.grational'
			artifactId = 'hash-functions'
			version = scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)

			from components.java
		}
	}
}

// codenarc groovy source analyses
codenarc{
	toolVersion = "$codenarcVersion"

	codenarcMain {
		configFile = rootProject.file('config/codenarc/ruleset.groovy')
		exclude "**/package-info.*"
		ignoreFailures true       // does not block builds
		maxPriority1Violations 0
		maxPriority2Violations 10
		maxPriority3Violations 20
	}
	codenarcTest {
		configFile = rootProject.file('config/codenarc/ruleset-test.groovy')
		ignoreFailures true
		maxPriority1Violations 0
		maxPriority2Violations 10
		maxPriority3Violations 20
	}
}

// [tasks] configuration //
jar {
	// execute check task when create the jar
	dependsOn 'check'
}

check {
	// clean before check
	dependsOn 'clean'
}

// vim: ft=groovy:fdm=indent
